apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
def isMinifyEnabled = false
def projectName = ""
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    compileSdkVersion project.compileSdkVersion
    defaultConfig {
        applicationId "com.pcyfox.common"
        projectName = "PCommon"
        versionCode project.versionCode
        versionName project.versionName

        minSdkVersion project.minSdkVersion
        targetSdkVersion project.androidTargetSdk
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        androidExtensions {//z支持动态添加控件（tip:LayoutContainer）
            experimental = true
        }
        resConfigs 'zh-rCN'


        compileOptions {
            sourceCompatibility rootProject.ext.javaSourceCompatibility
            targetCompatibility rootProject.ext.javaTargetCompatibility
        }

        kotlinOptions {
            jvmTarget = rootProject.ext.javaSourceCompatibility.toString()
        }

    }
    signingConfigs {
        debug {
            storeFile file('PCY.jks')
            storePassword "pcy@2022"
            keyAlias "key0"
            keyPassword "pcy@2022"
        }

        release {
            storeFile file('PCY.jks')
            storePassword "pcy@2022"
            keyAlias "key0"
            keyPassword "pcy@2022"
        }
    }


    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    buildTypes {
        release {
            manifestPlaceholders = [icon: "@drawable/ic_launcher", app_name: "PCommon"]
            minifyEnabled false
            isMinifyEnabled = minifyEnabled
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            manifestPlaceholders = [icon: "@drawable/ic_launcher", app_name: "PCommon"]
            minifyEnabled false
            isMinifyEnabled = minifyEnabled
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all {
        variant ->
            variant.outputs.all {
                if ('debug' == buildType.name) {
                    def flag
                    if (isMinifyEnabled) {
                        flag = "_minify_true_"
                    } else {
                        flag = "_minify_false_"
                    }
                    outputFileName = buildType.name + flag + projectName + "_" + defaultConfig.versionName + "_" + defaultConfig.versionCode + "_" + new Date().format("yyyy-MM-dd_HH-mm-ss") + ".apk"
                } else {
                    outputFileName = buildType.name + "_" + projectName + "_" + defaultConfig.versionName + "_" + defaultConfig.versionCode + "_" + new Date().format("yyyy-MM-dd_HH-mm-ss") + ".apk"
                }
            }

            //编译完成后将apk复制到指定目录
            variant.assemble.doLast {
                variant.outputs.all {
                    //复制到根目录下的output文件夹 如果不需要可以直接将代码删除
                    File desFilePath = new File("${rootDir}/apks/" + projectName + "-" + defaultConfig.versionName)
                    if (desFilePath.exists()) {
                        desFilePath.deleteDir()
                    }
                    File out = new File("${rootDir}/app/build/outputs")
                    copy {
                        from out
                        into desFilePath
                    }
                }
            }
    }

    buildFeatures {
        dataBinding = true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            // 当编译时出现报错，按情况添加
            excludes += "/META-INF/INDEX.LIST"
            excludes += "/META-INF/io.netty.versions.properties"
        }
    }

}

dependencies {
    if (isDeveloperMode.toBoolean()) {
        debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.2'
    }
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'me.jessyan:autosize:1.2.0'
    implementation project(path: ':lib_common')
    implementation project(path: ':lib_cache')
    implementation project(path: ':lib_widget')
    implementation project(path: ':lib_utils')
    implementation project(path: ':lib_network')
    implementation 'com.github.pcyfox:DeskConfigManager:V1.0.2'
    //implementation project(path: ':lib_third')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'me.jessyan:autosize:1.2.0'

    implementation 'com.google.android.material:material:1.6.1'
}